#version 430 core
#extension GL_ARB_compute_shader: enable
#extension GL_ARB_shader_storage_buffer_object: enable

// work group size injected before compilation
#define WORK_GROUP_SIZE_X XX
#define WORK_GROUP_SIZE_Y XX


layout(std430, binding = 0) readonly buffer velBuffer {
    vec4 velocity[];
};
layout(std430, binding = 1) readonly buffer posBuffer {
    vec4 pos[];
};
layout(std430, binding = 2) buffer predPos1 { // predicted position
    vec4 pPos1[];
};
layout(std430, binding = 3) buffer predPos2 { // predicted position
    vec4 pPos2[];
};

layout(location = 0) uniform float DT;

layout(location = 1) uniform int numVertices;

layout(local_size_x = WORK_GROUP_SIZE_X, local_size_y = WORK_GROUP_SIZE_Y, local_size_z = 1) in;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= numVertices) return;
    vec4 vertexData = pos[idx];
    vec3 prediction = vertexData.xyz;
    prediction = vertexData.xyz + velocity[idx].xyz * DT;
    
    
    pPos1[idx] = vec4(prediction, vertexData.w);
    pPos2[idx] = vec4(prediction, vertexData.w);
}
