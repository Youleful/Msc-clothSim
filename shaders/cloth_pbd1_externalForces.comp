#version 430 core
#extension GL_ARB_compute_shader: enable
#extension GL_ARB_shader_storage_buffer_object: enable

// work group size injected before compilation
#define WORK_GROUP_SIZE_X XX
#define WORK_GROUP_SIZE_Y XX

layout(std430, binding = 0) buffer velBuffer {
    vec4 velocity[];
};

// acceleration due to gravity
layout(location = 0) uniform float DT;
layout(location = 1) uniform vec3 F;
layout(location = 2) uniform int numVertices;

layout(local_size_x = WORK_GROUP_SIZE_X, local_size_y = WORK_GROUP_SIZE_Y, local_size_z = 1) in;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= numVertices) return;

    vec4 vel = velocity[idx];
     vel.xyz += F * DT;
     vel.xyz *= 0.95;
    velocity[idx] = vel;
}



